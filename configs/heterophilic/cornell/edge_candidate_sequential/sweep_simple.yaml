program: main.py
method: bayes
entity: mls-stuttgart
project: sweep-seq-cornell
name: sweep-seq-cornell
run_cap: 30

metric:
  goal: maximize
  name: val_metric

parameters:
  # read data
  dataset:
    value: hetero_cornell
  log_path:
    value: './logs'
  data_path:
    value: './datasets'

  # debugger mode
  num_runs:
    value: 1
  use_wandb:
    value: True
  debug:
    value: False

  # sample configs, shared by random and learnable sampling methods
  sample_configs.sample_policy:
    value: edge_candid_seq
  sample_configs.in_place:
    value: True
  sample_configs.sample_k: # add edges
    distribution: int_uniform
    min: 1
    max: 512
  sample_configs.sample_k2: # rm edges
    distribution: int_uniform
    min: 1
    max: 512
  sample_configs.candid_pool:
    value: 2048
  sample_configs.heuristic:
    value: longest_path
  sample_configs.ensemble:
    value: 1
  sample_configs.include_original_graph:
    value: False

  # sampler and its hyperparams
  imle_configs.sampler:
    value: simple
#  imle_configs.beta:   # for imle
#    value: 10
#  imle_configs.noise_scale:
#    value: 0.3
  imle_configs.logits_activation:
    value: None
  imle_configs.negative_sample:
    value: full
  imle_configs.num_train_ensemble:
    value: 1
  imle_configs.num_val_ensemble:
    value: 1

  # weighting the edges
  imle_configs.weight_edges:
    values:
      - None
      - marginals
    distribution: categorical
  imle_configs.marginals_mask:
    value: True

  # upstream model
  imle_configs.model:
    value: "edge_selector"
  imle_configs.rwse.kernel:
    value: 20
  imle_configs.rwse.layers:
    value: 2
  imle_configs.rwse.dim_pe:
    value: 16
  imle_configs.rwse.raw_norm_type:
    value: 'BatchNorm'
  imle_configs.lap.max_freqs:
    value: 4
  imle_configs.lap.dim_pe:
    value: 16
  imle_configs.lap.layers:
    value: 2
  imle_configs.lap.raw_norm_type:
    value: None
  imle_configs.emb_hid_size:
    values:
      - 64
      - 128
      - 256
    distribution: categorical
  imle_configs.gnn_layer:
    values:
      - 0
      - 2
      - 4
    distribution: categorical
  imle_configs.mlp_layer:
    values:
      - 2
      - 3
      - 4
    distribution: categorical
  imle_configs.dropout:
    value: 0.

  # upstream training
  imle_configs.embd_lr:
    value: 1.e-3
  imle_configs.emb_optim:
    value: adamw
  imle_configs.emb_scheduler:
    value: None
  imle_configs.reg_embd:
    value: 0.
  imle_configs.layernorm:
    value: False
  imle_configs.batchnorm:
    value: True
  imle_configs.micro_batch_embd:
    value: 1

  # downstream model
  model:
    value: gin_duo
  hid_size:
    value: 128
  num_convlayers:
    value: 2
  mlp_layers_intragraph:
    value: 3
  mlp_layers_intergraph:
    value: 2
  graph_pooling:
    value: transductive
  dropout:
    value: 0.
  bn:
    value: True
  residual:
    value: True
  inter_graph_pooling:
    value: cat

  # downstream training
  rwse.kernel:
    value: 20
  rwse.layers:
    value: 2
  rwse.dim_pe:
    value: 16
  rwse.raw_norm_type:
    value: 'BatchNorm'
  lap.max_freqs:
    value: 4
  lap.dim_pe:
    value: 16
  lap.layers:
    value: 2
  lap.raw_norm_type:
    value: None

  lr:
    value: 1.e-3
  lr_decay.scheduler:
    value: plateau
  lr_decay.mode:
    value: max
  lr_decay.decay_rate:
    value: 0.5
  lr_decay.patience:
    value: 50
  lr_decay.target:
    value: val_metric
  optim:
    value: adam
  early_stop.patience:
    value: 100
  early_stop.target:
    value: val_metric
  reg:
    value: 0.
  batch_size:
    value: 128
  min_epochs:
    value: 300
  max_epochs:
    value: 1000
